 ALTER TABLE KMIG_NV_CMPX ADD COLUMN MIG_RSN VARCHAR(20);
#확인1 잔여건수
SELECT COUNT(*) FROM KMIG_KB_CMPX KC WHERE KC.CMPX_IDF_ID NOT IN (SELECT CMPX_IDF_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP) AND MIG_RSN IS NULL; 
#확인2 KB 지역별분포
SELECT KC.KB_REGN_CD,COUNT(*)
FROM KMIG_KB_CMPX KC
WHERE KC.CMPX_IDF_ID NOT IN (SELECT CMPX_IDF_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP)
GROUP BY KC.KB_REGN_CD
;
#확인3 NV 지역별 분포
SELECT NV.GOV_LEGL_DONG_CD,COUNT(*)
FROM KMIG_NV_CMPX NV
WHERE NV.NV_CMPX_ID NOT IN (SELECT NV_CMPX_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP)
GROUP BY NV.GOV_LEGL_DONG_CD
;
#확인4 KB테이블 검증
SELECT * FROM KMIG_KB_NV_CMPX_KEY_MAPP GROUP BY CMPX_IDF_ID HAVING COUNT(*) > 1;
#확인5 NV테이블 검증
SELECT * FROM KMIG_KB_NV_CMPX_KEY_MAPP GROUP BY NV_CMPX_ID HAVING COUNT(*) > 1;
#확인6 이상건수 검증
SELECT KC.CMPX_IDF_ID, KC.CMPX_IDF_NM, KR3.KB_REGN_CD, KR3.KB_REGN_NM, KR2.KB_REGN_CD, KR2.KB_REGN_NM, KR1.KB_REGN_CD, KR1.KB_REGN_NM, NC.NV_CMPX_ID, NC.NV_CMPX_NM, KNCKM.REG_USER_ID
FROM KMIG_KB_CMPX KC
INNER JOIN KMIG_KB_REGN KR3
ON KC.KB_REGN_CD = KR3.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR2
ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR1
ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
INNER JOIN KMIG_KB_NV_CMPX_KEY_MAPP KNCKM #20529로 늘어남
ON KC.CMPX_IDF_ID = KNCKM.CMPX_IDF_ID
INNER JOIN KMIG_NV_CMPX NC
ON KNCKM.NV_CMPX_ID = NC.NV_CMPX_ID
WHERE NC.NV_CMPX_ID IN ('1415','1531','1754','199','25588','2928','4738','6877','9880')
ORDER BY NC.NV_CMPX_ID ASC
;
#처리7 매핑삭제
DELETE FROM KMIG_KB_NV_CMPX_KEY_MAPP
WHERE NV_CMPX_ID IN ('987')

;


 

#검증 1 KB 지역코드와 단지명이 유니크할 수 있는지 확인 7개 있음.
SELECT CMPX_IDF_NM, KB_REGN_CD, COUNT(*)
FROM KMIG_KB_CMPX KC
GROUP BY CMPX_IDF_NM, KB_REGN_CD
HAVING COUNT(*) > 1
;
SELECT KC.CMPX_IDF_ID, KC.CMPX_IDF_NM, KR3.KB_REGN_NM, KR2.KB_REGN_NM, KR.KB_REGN_NM
FROM KMIG_KB_CMPX KC
INNER JOIN KMIG_KB_REGN KR3
ON KC.KB_REGN_CD = KR3.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR2
ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR
ON KR2.UP_KB_REGN_CD = KR.KB_REGN_CD
WHERE KC.CMPX_IDF_ID IN (
	SELECT CMPX_IDF_ID
	FROM KMIG_KB_CMPX KC
	GROUP BY CMPX_IDF_NM, KB_REGN_CD
	HAVING COUNT(*) > 1
)
;
#MIG 컬럼 보정 
#SELECT * FROM
UPDATE 
KMIG_KB_CMPX
SET MIG_RSN = 'KBCNRCDUP'
  , CHG_USER_ID = 1000000001
  , CHG_DTM = NOW()
WHERE CMPX_IDF_ID IN ( 
	SELECT A.CMPX_IDF_ID 
    FROM (
		SELECT KC2.CMPX_IDF_ID
		FROM KMIG_KB_CMPX KC2
		WHERE (KC2.CMPX_IDF_NM, KC2.KB_REGN_CD) IN (
			SELECT KC.CMPX_IDF_NM,KC.KB_REGN_CD
			FROM KMIG_KB_CMPX KC
			GROUP BY KC.CMPX_IDF_NM, KC.KB_REGN_CD
			HAVING COUNT(*) > 1
		)
	) A
)
;
#검증 2 네이버에 지역코드와 단지명이 유니크할 수 있는지 확인 10개 있음.
SELECT NV_CMPX_NM, GOV_LEGL_DONG_CD
FROM KMIG_NV_CMPX NC
GROUP BY NV_CMPX_NM, GOV_LEGL_DONG_CD
HAVING COUNT(*) > 1
;
#MIG 컬럼 보정(SQL 시간 소요로 건건이 보정) 
UPDATE KMIG_NV_CMPX 
SET MIG_RSN = 'NVCNRCDUP'
  , CHG_USER_ID = 1000000001
  , CHG_DTM = NOW()
WHERE GOV_LEGL_DONG_CD = '1159010800'
AND NV_CMPX_NM = '대방'
;
UPDATE KMIG_NV_CMPX 
SET MIG_RSN = 'NVCNRCDUP'
  , CHG_USER_ID = 1000000001
  , CHG_DTM = NOW()
WHERE GOV_LEGL_DONG_CD = '4119012000'
AND NV_CMPX_NM = '방배'
;
UPDATE KMIG_NV_CMPX 
SET MIG_RSN = 'NVCNRCDUP'
  , CHG_USER_ID = 1000000001
  , CHG_DTM = NOW()
WHERE GOV_LEGL_DONG_CD = '4833033000'
AND NV_CMPX_NM = '새진흥'
;
UPDATE KMIG_NV_CMPX 
SET MIG_RSN = 'NVCNRCDUP'
  , CHG_USER_ID = 1000000001
  , CHG_DTM = NOW()
WHERE GOV_LEGL_DONG_CD = '2817010500'
AND NV_CMPX_NM = '세명'
;
UPDATE KMIG_NV_CMPX 
SET MIG_RSN = 'NVCNRCDUP'
  , CHG_USER_ID = 1000000001
  , CHG_DTM = NOW()
WHERE GOV_LEGL_DONG_CD = '1121510700'
AND NV_CMPX_NM = '씨즈건대힐스(도시형)'
;
UPDATE KMIG_NV_CMPX 
SET MIG_RSN = 'NVCNRCDUP'
  , CHG_USER_ID = 1000000001
  , CHG_DTM = NOW()
WHERE GOV_LEGL_DONG_CD = '1154510300'
AND NV_CMPX_NM = '우림메르디앙'
;
UPDATE KMIG_NV_CMPX 
SET MIG_RSN = 'NVCNRCDUP'
  , CHG_USER_ID = 1000000001
  , CHG_DTM = NOW()
WHERE GOV_LEGL_DONG_CD = '4117310400'
AND NV_CMPX_NM = '진우'
;
UPDATE KMIG_NV_CMPX 
SET MIG_RSN = 'NVCNRCDUP'
  , CHG_USER_ID = 1000000001
  , CHG_DTM = NOW()
WHERE GOV_LEGL_DONG_CD = '1150010300'
AND NV_CMPX_NM = '탑건진선미'
;
UPDATE KMIG_NV_CMPX 
SET MIG_RSN = 'NVCNRCDUP'
  , CHG_USER_ID = 1000000001
  , CHG_DTM = NOW()
WHERE GOV_LEGL_DONG_CD = '4311410100'
AND NV_CMPX_NM = '평화'
;
UPDATE KMIG_NV_CMPX 
SET MIG_RSN = 'NVCNRCDUP'
  , CHG_USER_ID = 1000000001
  , CHG_DTM = NOW()
WHERE GOV_LEGL_DONG_CD = '2823710100'
AND NV_CMPX_NM = '힐탑(도시형)'
;
#검증 3 KB 기준 슈퍼조인 단지갯수 18823 -> 18818
SELECT KC.CMPX_IDF_ID, KC.CMPX_IDF_NM, KR3.KB_REGN_NM, KR2.KB_REGN_NM, KR.KB_REGN_NM, COUNT(*)
FROM KMIG_KB_CMPX KC #18832 - 14(지역단지중복) = 18818
INNER JOIN KMIG_KB_REGN KR3
ON KC.KB_REGN_CD = KR3.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR2
ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR
ON KR2.UP_KB_REGN_CD = KR.KB_REGN_CD
WHERE MIG_RSN IS NULL
;
#검증 4 네이버 기준 슈퍼조인 단지갯수 
SELECT COUNT(*)
FROM KMIG_NV_CMPX NV #31337 - 20(지역단지중복) = 31317
INNER JOIN KRED_LEGL_REGN LR3
ON NV.GOV_LEGL_DONG_CD = LR3.LEGL_REGN_CD
INNER JOIN KRED_LEGL_REGN LR2
ON LR2.LEGL_REGN_CD = LR3.UP_LEGL_REGN_CD
INNER JOIN KRED_LEGL_REGN LR1
ON LR1.LEGL_REGN_CD = LR2.UP_LEGL_REGN_CD
WHERE MIG_RSN IS NULL
;
#검증 5 KB 기준으로 네이버를 검증 
SELECT 
#COUNT(*)
KC.CMPX_IDF_ID, KC.CMPX_IDF_NM, KR3.KB_REGN_CD, KR3.KB_REGN_NM, KR2.KB_REGN_CD, KR2.KB_REGN_NM, KR1.KB_REGN_CD, KR1.KB_REGN_NM, KNCKM.LEGL_REGN_CD, NC.NV_CMPX_ID, NC.NV_CMPX_NM
FROM KMIG_KB_CMPX KC
INNER JOIN KMIG_KB_REGN KR3
ON KC.KB_REGN_CD = KR3.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR2
ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR1
ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
INNER JOIN KMIG_KB_NV_REGN_KEY_MAPP KNCKM #20529로 늘어남
ON KR3.KB_REGN_CD = KNCKM.KB_REGN_CD
AND KNCKM.LV_CD = '3'
LEFT OUTER JOIN KMIG_NV_CMPX NC
ON KNCKM.LEGL_REGN_CD = NC.GOV_LEGL_DONG_CD #18818 -> 10626 ㅅㅂ
AND KC.CMPX_IDF_NM = NC.NV_CMPX_NM
AND NC.MIG_RSN IS NULL
WHERE KC.MIG_RSN IS NULL
AND NV_CMPX_ID IS NULL
ORDER BY KC.CMPX_IDF_ID ASC
;
#검증 5-1 MIG중복 검증 1건 검출(#KBA002354)
SELECT CMPX_IDF_ID, CMPX_IDF_NM, COUNT(*)
FROM (
	SELECT 
    #*
	#COUNT(*)
	#KC.CMPX_IDF_ID, KC.CMPX_IDF_NM, KR3.KB_REGN_CD, KR3.KB_REGN_NM, KR2.KB_REGN_CD, KR2.KB_REGN_NM, KR1.KB_REGN_CD, KR1.KB_REGN_NM, KNCKM.LEGL_REGN_CD, NC.NV_CMPX_ID, NC.NV_CMPX_NM
    KC.CMPX_IDF_ID, KC.CMPX_IDF_NM, KR3.KB_REGN_CD, KR3.KB_REGN_NM
	FROM KMIG_KB_CMPX KC
	INNER JOIN KMIG_KB_REGN KR3
	ON KC.KB_REGN_CD = KR3.KB_REGN_CD
	INNER JOIN KMIG_KB_REGN KR2
	ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
	INNER JOIN KMIG_KB_REGN KR1
	ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
	INNER JOIN KMIG_KB_NV_REGN_KEY_MAPP KNCKM #20529로 늘어남
	ON KR3.KB_REGN_CD = KNCKM.KB_REGN_CD
	AND KNCKM.LV_CD = '3'
	INNER JOIN KMIG_NV_CMPX NC
	ON KNCKM.LEGL_REGN_CD = NC.GOV_LEGL_DONG_CD #18818 -> 10626 ㅅㅂ
	AND KC.CMPX_IDF_NM = NC.NV_CMPX_NM
	#AND NC.MIG_RSN IS NULL
    WHERE 1=1
	#AND KC.MIG_RSN IS NULL
	ORDER BY KC.CMPX_IDF_ID ASC
) A
GROUP BY CMPX_IDF_ID 
HAVING COUNT(*) > 1    
;
UPDATE KMIG_KB_CMPX
SET MIG_RSN = 'KBNCDUP'
  , CHG_USER_ID = 1000000001
  , CHG_DTM = NOW()
WHERE CMPX_IDF_ID = 'KBA002354'
;
UPDATE KMIG_NV_CMPX
SET MIG_RSN = 'KBNCDUP'
  , CHG_USER_ID = 1000000001
  , CHG_DTM = NOW()
WHERE NV_CMPX_ID IN('10169','102339')
;
#작업 5-1 KB기준으로 지역, 단지명 매핑하여 KEYMAP 구성 COUNT * 10616
INSERT INTO KMIG_KB_NV_CMPX_KEY_MAPP
SELECT NC.NV_CMPX_ID, KC.CMPX_IDF_ID, 1000000001, NOW(), 1000000001, NOW()
#COUNT(*)
FROM KMIG_KB_CMPX KC
INNER JOIN KMIG_KB_REGN KR3
ON KC.KB_REGN_CD = KR3.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR2
ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR1
ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
INNER JOIN KMIG_KB_NV_REGN_KEY_MAPP KNCKM #20529로 늘어남
ON KR3.KB_REGN_CD = KNCKM.KB_REGN_CD
AND KNCKM.LV_CD = '3'
INNER JOIN KMIG_NV_CMPX NC
ON KNCKM.LEGL_REGN_CD = NC.GOV_LEGL_DONG_CD #18818 -> 10616 ㅅㅂ
AND NC.NV_CMPX_ID NOT IN (SELECT CMPX_IDF_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP)  
AND KC.CMPX_IDF_NM = NC.NV_CMPX_NM
AND NC.MIG_RSN IS NULL
WHERE 1=1
AND KC.MIG_RSN IS NULL
AND KC.CMPX_IDF_ID NOT IN (SELECT CMPX_IDF_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP) 
;
#작업 5-2 KB기준으로 ()문자 제외하고 단지명 MIG #1366개
INSERT INTO KMIG_KB_NV_CMPX_KEY_MAPP
SELECT NC.NV_CMPX_ID, KC.CMPX_IDF_ID, 1000000002, NOW(), 1000000002, NOW()
FROM KMIG_KB_CMPX KC
INNER JOIN KMIG_KB_REGN KR3
ON KC.KB_REGN_CD = KR3.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR2
ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR1
ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
INNER JOIN KMIG_KB_NV_REGN_KEY_MAPP KNCKM 
ON KR3.KB_REGN_CD = KNCKM.KB_REGN_CD
AND KNCKM.LV_CD = '3'
INNER JOIN KMIG_NV_CMPX NC
ON KNCKM.LEGL_REGN_CD = NC.GOV_LEGL_DONG_CD #18818 -> 10616
AND REPLACE(REPLACE(KC.CMPX_IDF_NM,'(',''),')','') = REPLACE(REPLACE(NC.NV_CMPX_NM,'(',''),')','') #1366
AND NC.MIG_RSN IS NULL
AND NC.NV_CMPX_ID NOT IN (SELECT CMPX_IDF_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP)  
WHERE 1=1
AND KC.MIG_RSN IS NULL
AND KC.CMPX_IDF_ID NOT IN (
	SELECT CMPX_IDF_ID 
    FROM KMIG_KB_NV_CMPX_KEY_MAPP
)    
;
#확인 5-2 중복확인
SELECT CMPX_IDF_ID,COUNT(*)
FROM (
	SELECT #NC.NV_CMPX_ID, KC.CMPX _IDF_ID, 1000000002, NOW(), 1000000002, NOW()
	KC.CMPX_IDF_ID
	FROM KMIG_KB_CMPX KC
	INNER JOIN KMIG_KB_REGN KR3
	ON KC.KB_REGN_CD = KR3.KB_REGN_CD
	INNER JOIN KMIG_KB_REGN KR2
	ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
	INNER JOIN KMIG_KB_REGN KR1
	ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
	INNER JOIN KMIG_KB_NV_REGN_KEY_MAPP KNCKM 
	ON KR3.KB_REGN_CD = KNCKM.KB_REGN_CD
	AND KNCKM.LV_CD = '3'
	INNER JOIN KMIG_NV_CMPX NC
	ON KNCKM.LEGL_REGN_CD = NC.GOV_LEGL_DONG_CD #18818 -> 10626 ㅅㅂ
	AND REPLACE(REPLACE(KC.CMPX_IDF_NM,'(',''),')','') = REPLACE(REPLACE(NC.NV_CMPX_NM,'(',''),')','') #1366
	AND NC.MIG_RSN IS NULL
	WHERE 1=1
	AND KC.MIG_RSN IS NULL
	AND KC.CMPX_IDF_ID NOT IN (
		SELECT CMPX_IDF_ID 
		FROM KMIG_KB_NV_CMPX_KEY_MAPP
	)    
) A
GROUP BY A.CMPX_IDF_ID
HAVING COUNT(*) > 1    
;
#확인 5-2 KB테이블 검증
SELECT * FROM KMIG_KB_NV_CMPX_KEY_MAPP GROUP BY CMPX_IDF_ID HAVING COUNT(*) > 1;
#확인 5-2 NV테이블 검증
SELECT * FROM KMIG_KB_NV_CMPX_KEY_MAPP GROUP BY NV_CMPX_ID HAVING COUNT(*) > 1;
;
SELECT A.REG_USER_ID, KC.CMPX_IDF_NM, NC.NV_CMPX_NM, KR3.KB_REGN_NM, KR2.KB_REGN_NM, KR1.KB_REGN_NM
FROM KMIG_KB_NV_CMPX_KEY_MAPP A
INNER JOIN kmig_kb_cmpx KC
ON A.CMPX_IDF_ID = KC.CMPX_IDF_ID
INNER JOIN KMIG_NV_CMPX NC
ON A.NV_CMPX_ID = NC.NV_CMPX_ID
AND NC.NV_CMPX_ID NOT IN (SELECT CMPX_IDF_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP)  
INNER JOIN KMIG_KB_REGN KR3
ON KC.KB_REGN_CD = KR3.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR2
ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR1
ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
INNER JOIN KRED_LEGL_REGN
WHERE A.NV_CMPX_ID IN ('106616','10923','11187','17044','2477','5494','6649','7599')
;
#확인 5-2 잔여건수   18832 MIG불가 15 5-1MIG 10616 5-2MIG 1366 = 계 6835
SELECT COUNT(*) FROM KMIG_KB_CMPX KC WHERE KC.CMPX_IDF_ID NOT IN (SELECT CMPX_IDF_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP) AND MIG_RSN IS NULL; 
#작업 5-3 KB기준으로 .문자 제외하고 단지명 MIG #565개
INSERT INTO KMIG_KB_NV_CMPX_KEY_MAPP
SELECT NC.NV_CMPX_ID, KC.CMPX_IDF_ID, 1000000003, NOW(), 1000000003, NOW()
FROM KMIG_KB_CMPX KC
INNER JOIN KMIG_KB_REGN KR3
ON KC.KB_REGN_CD = KR3.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR2
ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR1
ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
INNER JOIN KMIG_KB_NV_REGN_KEY_MAPP KNCKM 
ON KR3.KB_REGN_CD = KNCKM.KB_REGN_CD
AND KNCKM.LV_CD = '3'
INNER JOIN KMIG_NV_CMPX NC
ON KNCKM.LEGL_REGN_CD = NC.GOV_LEGL_DONG_CD #18818 -> 10616 ㅅㅂ
AND REPLACE(KC.CMPX_IDF_NM,'.','') = REPLACE(NC.NV_CMPX_NM,'.','') #1366
AND NC.MIG_RSN IS NULL
WHERE 1=1
AND KC.MIG_RSN IS NULL
AND KC.CMPX_IDF_ID NOT IN (
	SELECT CMPX_IDF_ID 
    FROM KMIG_KB_NV_CMPX_KEY_MAPP
)    
;
#작업 5-3 KB기준으로 .문자 제외하고 단지명 MIG #565개 
SELECT CMPX_IDF_ID,COUNT(*)
FROM (
	SELECT NC.NV_CMPX_ID, KC.CMPX_IDF_ID
	FROM KMIG_KB_CMPX KC
	INNER JOIN KMIG_KB_REGN KR3
	ON KC.KB_REGN_CD = KR3.KB_REGN_CD
	INNER JOIN KMIG_KB_REGN KR2
	ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
	INNER JOIN KMIG_KB_REGN KR1
	ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
	INNER JOIN KMIG_KB_NV_REGN_KEY_MAPP KNCKM 
	ON KR3.KB_REGN_CD = KNCKM.KB_REGN_CD
	AND KNCKM.LV_CD = '3'
	INNER JOIN KMIG_NV_CMPX NC
	ON KNCKM.LEGL_REGN_CD = NC.GOV_LEGL_DONG_CD 
	AND REPLACE(KC.CMPX_IDF_NM,'.','') = REPLACE(NC.NV_CMPX_NM,'.','') 
	AND NC.MIG_RSN IS NULL
	WHERE 1=1
	AND KC.MIG_RSN IS NULL
	AND KC.CMPX_IDF_ID NOT IN (
		SELECT CMPX_IDF_ID 
		FROM KMIG_KB_NV_CMPX_KEY_MAPP
		) 
	)A
GROUP BY A.CMPX_IDF_ID
HAVING COUNT(*) > 1 
;

#작업 5-4 KB기준으로 1차 문자 제외하고 단지명 MIG #194
INSERT INTO KMIG_KB_NV_CMPX_KEY_MAPP
SELECT NC.NV_CMPX_ID, KC.CMPX_IDF_ID, 1000000004, NOW(), 1000000004, NOW()
FROM KMIG_KB_CMPX KC
INNER JOIN KMIG_KB_REGN KR3
ON KC.KB_REGN_CD = KR3.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR2
ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR1
ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
INNER JOIN KMIG_KB_NV_REGN_KEY_MAPP KNCKM 
ON KR3.KB_REGN_CD = KNCKM.KB_REGN_CD
AND KNCKM.LV_CD = '3'
INNER JOIN KMIG_NV_CMPX NC
ON KNCKM.LEGL_REGN_CD = NC.GOV_LEGL_DONG_CD 
AND REPLACE(KC.CMPX_IDF_NM,'1차','') = REPLACE(NC.NV_CMPX_NM,'1차','') #1366
AND NC.MIG_RSN IS NULL
WHERE 1=1
AND KC.MIG_RSN IS NULL
AND KC.CMPX_IDF_ID NOT IN (
	SELECT CMPX_IDF_ID 
    FROM KMIG_KB_NV_CMPX_KEY_MAPP
)    
;
SELECT CMPX_IDF_ID,COUNT(*)
FROM (
		SELECT NC.NV_CMPX_ID, KC.CMPX_IDF_ID
		FROM KMIG_KB_CMPX KC
		INNER JOIN KMIG_KB_REGN KR3
		ON KC.KB_REGN_CD = KR3.KB_REGN_CD
		INNER JOIN KMIG_KB_REGN KR2
		ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
		INNER JOIN KMIG_KB_REGN KR1
		ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
		INNER JOIN KMIG_KB_NV_REGN_KEY_MAPP KNCKM 
		ON KR3.KB_REGN_CD = KNCKM.KB_REGN_CD
		AND KNCKM.LV_CD = '3'
		INNER JOIN KMIG_NV_CMPX NC
		ON KNCKM.LEGL_REGN_CD = NC.GOV_LEGL_DONG_CD 
		AND REPLACE(KC.CMPX_IDF_NM,'1차','') = REPLACE(NC.NV_CMPX_NM,'1차','') #1366
		AND NC.MIG_RSN IS NULL
		WHERE 1=1
		AND KC.MIG_RSN IS NULL
		AND KC.CMPX_IDF_ID NOT IN (
			SELECT CMPX_IDF_ID 
			FROM KMIG_KB_NV_CMPX_KEY_MAPP
		)   
	)A
GROUP BY A.CMPX_IDF_ID
HAVING COUNT(*) > 1 
;
#작업 5-5 KB기준으로 2차 문자 제외하고 단지명 MIG #223
INSERT INTO KMIG_KB_NV_CMPX_KEY_MAPP
SELECT NC.NV_CMPX_ID, KC.CMPX_IDF_ID, 1000000005, NOW(), 1000000005, NOW()
FROM KMIG_KB_CMPX KC
INNER JOIN KMIG_KB_REGN KR3
ON KC.KB_REGN_CD = KR3.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR2
ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR1
ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
INNER JOIN KMIG_KB_NV_REGN_KEY_MAPP KNCKM 
ON KR3.KB_REGN_CD = KNCKM.KB_REGN_CD
AND KNCKM.LV_CD = '3'
INNER JOIN KMIG_NV_CMPX NC
ON KNCKM.LEGL_REGN_CD = NC.GOV_LEGL_DONG_CD 
AND NC.NV_CMPX_NM LIKE '%2차%'
AND REPLACE(KC.CMPX_IDF_NM,'2차','') = REPLACE(NC.NV_CMPX_NM,'2차','') #1366
AND NC.MIG_RSN IS NULL
WHERE 1=1
AND KC.CMPX_IDF_NM LIKE '%2차%'
AND KC.MIG_RSN IS NULL
AND KC.CMPX_IDF_ID NOT IN (
	SELECT CMPX_IDF_ID 
    FROM KMIG_KB_NV_CMPX_KEY_MAPP
)    
;
SELECT CMPX_IDF_ID,COUNT(*)
FROM (
		SELECT NC.NV_CMPX_ID, KC.CMPX_IDF_ID
		FROM KMIG_KB_CMPX KC
		INNER JOIN KMIG_KB_REGN KR3
		ON KC.KB_REGN_CD = KR3.KB_REGN_CD
		INNER JOIN KMIG_KB_REGN KR2
		ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
		INNER JOIN KMIG_KB_REGN KR1
		ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
		INNER JOIN KMIG_KB_NV_REGN_KEY_MAPP KNCKM 
		ON KR3.KB_REGN_CD = KNCKM.KB_REGN_CD
		AND KNCKM.LV_CD = '3'
		INNER JOIN KMIG_NV_CMPX NC
		ON KNCKM.LEGL_REGN_CD = NC.GOV_LEGL_DONG_CD 
		AND NC.NV_CMPX_NM LIKE '%2차%'
		AND REPLACE(KC.CMPX_IDF_NM,'2차','') = REPLACE(NC.NV_CMPX_NM,'2차','') #1366
		AND NC.MIG_RSN IS NULL
		WHERE 1=1
		AND KC.CMPX_IDF_NM LIKE '%2차%'
		AND KC.MIG_RSN IS NULL
		AND KC.CMPX_IDF_ID NOT IN (
			SELECT CMPX_IDF_ID 
			FROM KMIG_KB_NV_CMPX_KEY_MAPP
		) 
	)A
GROUP BY A.CMPX_IDF_ID
HAVING COUNT(*) > 1 
;
#작업 5-6 KB기준으로 3차 문자 제외하고 단지명 MIG  #82
INSERT INTO KMIG_KB_NV_CMPX_KEY_MAPP
SELECT NC.NV_CMPX_ID, KC.CMPX_IDF_ID, 1000000006, NOW(), 1000000006, NOW()
FROM KMIG_KB_CMPX KC
INNER JOIN KMIG_KB_REGN KR3
ON KC.KB_REGN_CD = KR3.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR2
ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR1
ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
INNER JOIN KMIG_KB_NV_REGN_KEY_MAPP KNCKM 
ON KR3.KB_REGN_CD = KNCKM.KB_REGN_CD
AND KNCKM.LV_CD = '3'
INNER JOIN KMIG_NV_CMPX NC
ON KNCKM.LEGL_REGN_CD = NC.GOV_LEGL_DONG_CD 
AND NC.NV_CMPX_NM LIKE '%3차%'
AND REPLACE(KC.CMPX_IDF_NM,'3차','') = REPLACE(NC.NV_CMPX_NM,'3차','')
AND NC.MIG_RSN IS NULL
WHERE 1=1
AND KC.CMPX_IDF_NM LIKE '%3차%'
AND KC.MIG_RSN IS NULL
AND KC.CMPX_IDF_ID NOT IN (
	SELECT CMPX_IDF_ID 
    FROM KMIG_KB_NV_CMPX_KEY_MAPP
)    
;
SELECT CMPX_IDF_ID,COUNT(*)
FROM (
		SELECT NC.NV_CMPX_ID, KC.CMPX_IDF_ID
		FROM KMIG_KB_CMPX KC
		INNER JOIN KMIG_KB_REGN KR3
		ON KC.KB_REGN_CD = KR3.KB_REGN_CD
		INNER JOIN KMIG_KB_REGN KR2
		ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
		INNER JOIN KMIG_KB_REGN KR1
		ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
		INNER JOIN KMIG_KB_NV_REGN_KEY_MAPP KNCKM 
		ON KR3.KB_REGN_CD = KNCKM.KB_REGN_CD
		AND KNCKM.LV_CD = '3'
		INNER JOIN KMIG_NV_CMPX NC
		ON KNCKM.LEGL_REGN_CD = NC.GOV_LEGL_DONG_CD 
		AND NC.NV_CMPX_NM LIKE '%3차%'
		AND REPLACE(KC.CMPX_IDF_NM,'3차','') = REPLACE(NC.NV_CMPX_NM,'3차','')
		AND NC.MIG_RSN IS NULL
		WHERE 1=1
		AND KC.CMPX_IDF_NM LIKE '%3차%'
		AND KC.MIG_RSN IS NULL
		AND KC.CMPX_IDF_ID NOT IN (
			SELECT CMPX_IDF_ID 
			FROM KMIG_KB_NV_CMPX_KEY_MAPP
		)   
	 )A
GROUP BY A.CMPX_IDF_ID
HAVING COUNT(*) > 1 
;
#작업 5-8 KB기준으로 3차 문자 제외하고 단지명 MIG  #35
INSERT INTO KMIG_KB_NV_CMPX_KEY_MAPP
SELECT NC.NV_CMPX_ID, KC.CMPX_IDF_ID, 1000000007, NOW(), 1000000007, NOW()
FROM KMIG_KB_CMPX KC
INNER JOIN KMIG_KB_REGN KR3
ON KC.KB_REGN_CD = KR3.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR2
ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR1
ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
INNER JOIN KMIG_KB_NV_REGN_KEY_MAPP KNCKM 
ON KR3.KB_REGN_CD = KNCKM.KB_REGN_CD
AND KNCKM.LV_CD = '3'
INNER JOIN KMIG_NV_CMPX NC
ON KNCKM.LEGL_REGN_CD = NC.GOV_LEGL_DONG_CD 
AND REPLACE(KC.CMPX_IDF_NM,'-','') = REPLACE(NC.NV_CMPX_NM,'-','')
AND NC.MIG_RSN IS NULL
WHERE 1=1
AND KC.MIG_RSN IS NULL
AND KC.CMPX_IDF_ID NOT IN (
	SELECT CMPX_IDF_ID 
    FROM KMIG_KB_NV_CMPX_KEY_MAPP
)    
;
SELECT CMPX_IDF_ID,COUNT(*)
FROM (
		SELECT NC.NV_CMPX_ID, KC.CMPX_IDF_ID
		FROM KMIG_KB_CMPX KC
		INNER JOIN KMIG_KB_REGN KR3
		ON KC.KB_REGN_CD = KR3.KB_REGN_CD
		INNER JOIN KMIG_KB_REGN KR2
		ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
		INNER JOIN KMIG_KB_REGN KR1
		ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
		INNER JOIN KMIG_KB_NV_REGN_KEY_MAPP KNCKM 
		ON KR3.KB_REGN_CD = KNCKM.KB_REGN_CD
		AND KNCKM.LV_CD = '3'
		INNER JOIN KMIG_NV_CMPX NC
		ON KNCKM.LEGL_REGN_CD = NC.GOV_LEGL_DONG_CD 
		AND REPLACE(KC.CMPX_IDF_NM,'-','') = REPLACE(NC.NV_CMPX_NM,'-','')
		AND NC.MIG_RSN IS NULL
		WHERE 1=1
		AND KC.MIG_RSN IS NULL
		AND KC.CMPX_IDF_ID NOT IN (
			SELECT CMPX_IDF_ID 
			FROM KMIG_KB_NV_CMPX_KEY_MAPP
	)    
 )A
GROUP BY A.CMPX_IDF_ID
HAVING COUNT(*) > 1 
;
SET SQL_SAFE_UPDATES = 0;
;
#작업 5-9 KB기준으로 동 문자 제외하고 단지명 MIG #368
INSERT INTO KMIG_KB_NV_CMPX_KEY_MAPP
SELECT NC.NV_CMPX_ID, KC.CMPX_IDF_ID, 1000000009, NOW(), 1000000009, NOW()
FROM KMIG_KB_CMPX KC
INNER JOIN KMIG_KB_REGN KR3
ON KC.KB_REGN_CD = KR3.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR2
ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR1
ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
INNER JOIN KMIG_KB_NV_REGN_KEY_MAPP KNCKM 
ON KR3.KB_REGN_CD = KNCKM.KB_REGN_CD
AND KNCKM.LV_CD = '3'
INNER JOIN KMIG_NV_CMPX NC
ON KNCKM.LEGL_REGN_CD = NC.GOV_LEGL_DONG_CD 
AND REPLACE(KC.CMPX_IDF_NM,'동','') = REPLACE(NC.NV_CMPX_NM,'동','')
AND NC.MIG_RSN IS NULL
WHERE 1=1
AND KC.MIG_RSN IS NULL
AND KC.CMPX_IDF_ID NOT IN (
	SELECT CMPX_IDF_ID 
    FROM KMIG_KB_NV_CMPX_KEY_MAPP
)
AND KC.CMPX_IDF_ID != 'KBA006988'     #중복 제거
;
SELECT CMPX_IDF_ID,COUNT(*)
FROM (
		SELECT NC.NV_CMPX_ID, KC.CMPX_IDF_ID
		FROM KMIG_KB_CMPX KC
		INNER JOIN KMIG_KB_REGN KR3
		ON KC.KB_REGN_CD = KR3.KB_REGN_CD
		INNER JOIN KMIG_KB_REGN KR2
		ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
		INNER JOIN KMIG_KB_REGN KR1
		ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
		INNER JOIN KMIG_KB_NV_REGN_KEY_MAPP KNCKM 
		ON KR3.KB_REGN_CD = KNCKM.KB_REGN_CD
		AND KNCKM.LV_CD = '3'
		INNER JOIN KMIG_NV_CMPX NC
		ON KNCKM.LEGL_REGN_CD = NC.GOV_LEGL_DONG_CD 
		AND REPLACE(KC.CMPX_IDF_NM,'동','') = REPLACE(NC.NV_CMPX_NM,'동','')
		AND NC.MIG_RSN IS NULL
		WHERE 1=1
		AND KC.MIG_RSN IS NULL
		AND KC.CMPX_IDF_ID NOT IN (
			SELECT CMPX_IDF_ID 
			FROM KMIG_KB_NV_CMPX_KEY_MAPP
	)    
 )A
GROUP BY A.CMPX_IDF_ID
HAVING COUNT(*) > 1 
;

#작업 5-10 KB기준으로 지역명 제외하고 단지명 MIG #427
INSERT INTO KMIG_KB_NV_CMPX_KEY_MAPP
SELECT NC.NV_CMPX_ID, KC.CMPX_IDF_ID, 1000000010, NOW(), 1000000010, NOW()
FROM KMIG_KB_CMPX KC
INNER JOIN KMIG_KB_REGN KR3
ON KC.KB_REGN_CD = KR3.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR2
ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR1
ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
INNER JOIN KMIG_KB_NV_REGN_KEY_MAPP KNCKM 
ON KR3.KB_REGN_CD = KNCKM.KB_REGN_CD
AND KNCKM.LV_CD = '3'
INNER JOIN KMIG_NV_CMPX NC
ON KNCKM.LEGL_REGN_CD = NC.GOV_LEGL_DONG_CD 
AND REPLACE(KC.CMPX_IDF_NM,SUBSTRING(KR3.KB_REGN_NM,1,LENGTH(KR3.KB_REGN_NM)/3-1),'') = REPLACE(NC.NV_CMPX_NM,SUBSTRING(KR3.KB_REGN_NM,1,LENGTH(KR3.KB_REGN_NM)/3-1),'')
AND NC.MIG_RSN IS NULL
WHERE 1=1
AND KC.MIG_RSN IS NULL
AND KC.CMPX_IDF_ID NOT IN (
	SELECT CMPX_IDF_ID 
    FROM KMIG_KB_NV_CMPX_KEY_MAPP
)
;
SELECT CMPX_IDF_ID,COUNT(*)
FROM (
		SELECT NC.NV_CMPX_ID, KC.CMPX_IDF_ID
		FROM KMIG_KB_CMPX KC
		INNER JOIN KMIG_KB_REGN KR3
		ON KC.KB_REGN_CD = KR3.KB_REGN_CD
		INNER JOIN KMIG_KB_REGN KR2
		ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
		INNER JOIN KMIG_KB_REGN KR1
		ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
		INNER JOIN KMIG_KB_NV_REGN_KEY_MAPP KNCKM 
		ON KR3.KB_REGN_CD = KNCKM.KB_REGN_CD
		AND KNCKM.LV_CD = '3'
		INNER JOIN KMIG_NV_CMPX NC
		ON KNCKM.LEGL_REGN_CD = NC.GOV_LEGL_DONG_CD 
		AND REPLACE(KC.CMPX_IDF_NM,SUBSTRING(KR3.KB_REGN_NM,1,LENGTH(KR3.KB_REGN_NM)/3-1),'') = REPLACE(NC.NV_CMPX_NM,SUBSTRING(KR3.KB_REGN_NM,1,LENGTH(KR3.KB_REGN_NM)/3-1),'')
		AND NC.MIG_RSN IS NULL
		WHERE 1=1
		AND KC.MIG_RSN IS NULL
		AND KC.CMPX_IDF_ID NOT IN (
			SELECT CMPX_IDF_ID 
			FROM KMIG_KB_NV_CMPX_KEY_MAPP
		)
 )A
GROUP BY A.CMPX_IDF_ID
HAVING COUNT(*) > 1 
;
#작업 5-11 KB기준으로 지역명(LV2) 제외하고 단지명 MIG #90
INSERT INTO KMIG_KB_NV_CMPX_KEY_MAPP
SELECT NC.NV_CMPX_ID, KC.CMPX_IDF_ID, 1000000011, NOW(), 1000000011, NOW()
FROM KMIG_KB_CMPX KC
INNER JOIN KMIG_KB_REGN KR3
ON KC.KB_REGN_CD = KR3.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR2
ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR1
ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
INNER JOIN KMIG_KB_NV_REGN_KEY_MAPP KNCKM 
ON KR3.KB_REGN_CD = KNCKM.KB_REGN_CD
AND KNCKM.LV_CD = '3'
INNER JOIN KMIG_NV_CMPX NC
ON KNCKM.LEGL_REGN_CD = NC.GOV_LEGL_DONG_CD 
AND REPLACE(KC.CMPX_IDF_NM,SUBSTRING(KR2.KB_REGN_NM,1,LENGTH(KR2.KB_REGN_NM)/3-1),'') = REPLACE(NC.NV_CMPX_NM,SUBSTRING(KR2.KB_REGN_NM,1,LENGTH(KR2.KB_REGN_NM)/3-1),'')
AND NC.MIG_RSN IS NULL
WHERE 1=1
AND KC.MIG_RSN IS NULL
AND KC.CMPX_IDF_ID NOT IN (
	SELECT CMPX_IDF_ID 
    FROM KMIG_KB_NV_CMPX_KEY_MAPP
)
;
SELECT CMPX_IDF_ID,COUNT(*)
FROM (
		SELECT NC.NV_CMPX_ID, KC.CMPX_IDF_ID
		FROM KMIG_KB_CMPX KC
		INNER JOIN KMIG_KB_REGN KR3
		ON KC.KB_REGN_CD = KR3.KB_REGN_CD
		INNER JOIN KMIG_KB_REGN KR2
		ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
		INNER JOIN KMIG_KB_REGN KR1
		ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
		INNER JOIN KMIG_KB_NV_REGN_KEY_MAPP KNCKM 
		ON KR3.KB_REGN_CD = KNCKM.KB_REGN_CD
		AND KNCKM.LV_CD = '3'
		INNER JOIN KMIG_NV_CMPX NC
		ON KNCKM.LEGL_REGN_CD = NC.GOV_LEGL_DONG_CD 
		AND REPLACE(KC.CMPX_IDF_NM,SUBSTRING(KR3.KB_REGN_NM,1,LENGTH(KR3.KB_REGN_NM)/3-1),'') = REPLACE(NC.NV_CMPX_NM,SUBSTRING(KR3.KB_REGN_NM,1,LENGTH(KR3.KB_REGN_NM)/3-1),'')
		AND NC.MIG_RSN IS NULL
		WHERE 1=1
		AND KC.MIG_RSN IS NULL
		AND KC.CMPX_IDF_ID NOT IN (
			SELECT CMPX_IDF_ID 
			FROM KMIG_KB_NV_CMPX_KEY_MAPP
		)
 )A
GROUP BY A.CMPX_IDF_ID
HAVING COUNT(*) > 1 
;
#확인 지역명으로 MIG 하였기 때문에 평형정보로 확인 
SELECT 
#COUNT(*) #5635
KC.CMPX_IDF_ID, KC.CMPX_IDF_NM, NC.NV_CMPX_NM, KR3.KB_REGN_CD, KR3.KB_REGN_NM, KR2.KB_REGN_CD, KR2.KB_REGN_NM, KR1.KB_REGN_CD, KR1.KB_REGN_NM, KNCKM.LEGL_REGN_CD, NC.NV_CMPX_ID
FROM KMIG_KB_CMPX KC
INNER JOIN KMIG_KB_REGN KR3
ON KC.KB_REGN_CD = KR3.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR2
ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR1
ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
INNER JOIN KMIG_KB_NV_REGN_KEY_MAPP KNCKM #8201 -> 8926
ON KR3.KB_REGN_CD = KNCKM.KB_REGN_CD
AND KNCKM.LV_CD = '3'
INNER JOIN KMIG_NV_CMPX NC
ON KNCKM.LEGL_REGN_CD = NC.GOV_LEGL_DONG_CD
INNER JOIN KMIG_KB_CMPX_TYP KCT
ON KC.CMPX_IDF_ID = KCT.CMPX_IDF_ID
AND KCT.HOUSE_TYP_SEQ = 1
INNER JOIN KMIG_NV_CMPX_TYP NCT
ON NC.NV_CMPX_ID = NCT.NV_CMPX_ID
AND NCT.NV_CMPX_TYP_SEQ = 1
AND KCT.ONLY_AREA = NCT.ONLY_AREA_NUM
AND KCT.SPLY_AREA = NCT.SPLY_AREA_NUM
INNER JOIN KMIG_KB_CMPX_TYP KCT2
ON KC.CMPX_IDF_ID = KCT2.CMPX_IDF_ID
AND KCT2.HOUSE_TYP_SEQ = 2
INNER JOIN KMIG_NV_CMPX_TYP NCT2
ON NC.NV_CMPX_ID = NCT2.NV_CMPX_ID
AND NCT2.NV_CMPX_TYP_SEQ = 2
AND KCT2.ONLY_AREA = NCT2.ONLY_AREA_NUM
AND KCT2.SPLY_AREA = NCT2.SPLY_AREA_NUM
INNER JOIN KMIG_KB_CMPX_TYP KCT3
ON KC.CMPX_IDF_ID = KCT3.CMPX_IDF_ID
AND KCT3.HOUSE_TYP_SEQ = 3
INNER JOIN KMIG_NV_CMPX_TYP NCT3
ON NC.NV_CMPX_ID = NCT3.NV_CMPX_ID
AND NCT3.NV_CMPX_TYP_SEQ = 3
AND KCT3.ONLY_AREA = NCT3.ONLY_AREA_NUM
AND KCT3.SPLY_AREA = NCT3.SPLY_AREA_NUM
WHERE 1=1
AND KC.MIG_RSN IS NULL
AND KC.CMPX_IDF_ID NOT IN (
	SELECT CMPX_IDF_ID 
    FROM KMIG_KB_NV_CMPX_KEY_MAPP
)   
;
#작업 5-12 평형기준으로 Math 3215건
INSERT INTO KMIG_KB_NV_CMPX_KEY_MAPP
SELECT NC.NV_CMPX_ID, KC.CMPX_IDF_ID, 1000000012, NOW(), 1000000012, NOW()
FROM KMIG_KB_CMPX KC
INNER JOIN KMIG_KB_REGN KR3
ON KC.KB_REGN_CD = KR3.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR2
ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR1
ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
INNER JOIN KMIG_KB_NV_REGN_KEY_MAPP KNCKM #8201 -> 8926
ON KR3.KB_REGN_CD = KNCKM.KB_REGN_CD
AND KNCKM.LV_CD = '3'
INNER JOIN KMIG_NV_CMPX NC
ON KNCKM.LEGL_REGN_CD = NC.GOV_LEGL_DONG_CD
INNER JOIN KMIG_KB_CMPX_TYP KCT
ON KC.CMPX_IDF_ID = KCT.CMPX_IDF_ID
INNER JOIN KMIG_NV_CMPX_TYP NCT
ON NC.NV_CMPX_ID = NCT.NV_CMPX_ID
AND KCT.ONLY_AREA = NCT.ONLY_AREA_NUM
AND KCT.SPLY_AREA = NCT.SPLY_AREA_NUM
WHERE 1=1
AND KC.CMPX_IDF_ID NOT IN (
	SELECT CMPX_IDF_ID 
	FROM KMIG_KB_NV_CMPX_KEY_MAPP
)
AND KC.CMPX_IDF_ID NOT IN ('KBA000126','KBA000200','KBA000764','KBA001269','KBA001576','KBA001647','KBA002346','KBA003128','KBA003138','KBA003144','KBA003248','KBA003498','KBA003637','KBA003803','KBA003904','KBA004459','KBA004537','KBA004903','KBA005167','KBA005870','KBA006714','KBA006746','KBA007377','KBA008265','KBA008283','KBA009425','KBA009429','KBA013753','KBA016277','KBA020035','KBA020277','KBA022749','KBA025761','KBA026120','KBA027016','KBA027982','KBA028580')
GROUP BY KC.CMPX_IDF_ID, NC.NV_CMPX_ID
HAVING COUNT(*) = (SELECT COUNT(*) FROM KMIG_KB_CMPX_TYP KCTS WHERE KCTS.CMPX_IDF_ID = KC.CMPX_IDF_ID) 
;
#작업 5-12 중복확인 37건
SELECT CMPX_IDF_ID,COUNT(*)
FROM (
		SELECT KC.CMPX_IDF_ID, NC.NV_CMPX_ID
		FROM KMIG_KB_CMPX KC
		INNER JOIN KMIG_KB_REGN KR3
		ON KC.KB_REGN_CD = KR3.KB_REGN_CD
		INNER JOIN KMIG_KB_REGN KR2
		ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
		INNER JOIN KMIG_KB_REGN KR1
		ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
		INNER JOIN KMIG_KB_NV_REGN_KEY_MAPP KNCKM #8201 -> 8926
		ON KR3.KB_REGN_CD = KNCKM.KB_REGN_CD
		AND KNCKM.LV_CD = '3'
		INNER JOIN KMIG_NV_CMPX NC
		ON KNCKM.LEGL_REGN_CD = NC.GOV_LEGL_DONG_CD
		INNER JOIN KMIG_KB_CMPX_TYP KCT
		ON KC.CMPX_IDF_ID = KCT.CMPX_IDF_ID
		INNER JOIN KMIG_NV_CMPX_TYP NCT
		ON NC.NV_CMPX_ID = NCT.NV_CMPX_ID
		AND KCT.ONLY_AREA = NCT.ONLY_AREA_NUM
		AND KCT.SPLY_AREA = NCT.SPLY_AREA_NUM
        WHERE 1=1
		#AND KC.MIG_RSN IS NULL
		AND KC.CMPX_IDF_ID NOT IN (
			SELECT CMPX_IDF_ID 
			FROM KMIG_KB_NV_CMPX_KEY_MAPP
		)
		GROUP BY KC.CMPX_IDF_ID, NC.NV_CMPX_ID
		HAVING COUNT(*) = (SELECT COUNT(*) FROM KMIG_KB_CMPX_TYP KCTS WHERE KCTS.CMPX_IDF_ID = KC.CMPX_IDF_ID) 
	)A
GROUP BY A.CMPX_IDF_ID
HAVING COUNT(*) > 1 
;
#MIG RSN 보정 (지역명 중복으로 인해 마이그 되지 않은 건들)
#추출
SELECT NC.NV_CMPX_ID
FROM KMIG_KB_CMPX KC
INNER JOIN KMIG_KB_NV_CMPX_KEY_MAPP KNCKM
ON KC.CMPX_IDF_ID = KNCKM.CMPX_IDF_ID
INNER JOIN KMIG_NV_CMPX NC
ON KNCKM.NV_CMPX_ID = NC.NV_CMPX_ID
WHERE 1=1
#AND KC.MIG_RSN_IS IS NOT NULL
#AND NV.MIG_RSN_IS IS NOT NULL
;
UPDATE KMIG_KB_CMPX
SET MIG_RSN = null
  , CHG_USER_ID = '1000000001'
  , CHG_DTM = NOW()
WHERE CMPX_IDF_ID IN ('KBA023902','KBA023903','KBA024829','KBA000649','KBA011039','KBA010663','KBA005830','KBA001977','KBA007833')    
;
UPDATE KMIG_NV_CMPX
SET MIG_RSN = null
  , CHG_USER_ID = '1000000001'
  , CHG_DTM = NOW()
WHERE NV_CMPX_ID IN ('15629','19504')
;
#작업 5-13 수동 MIG 네이버의 3,4번째 글자가 KB에 포함된 경우
SELECT KC.CMPX_IDF_ID,KC.CMPX_IDF_NM, NC.NV_CMPX_NM,KR3.KB_REGN_NM, KR2.KB_REGN_NM, KR1.KB_REGN_NM, CONCAT('INSERT INTO KMIG_KB_NV_CMPX_KEY_MAPP (NV_CMPX_ID,CMPX_IDF_ID,REG_USER_ID,REG_DTM,CHG_USER_ID,CHG_DTM) VALUES (','''',NC.NV_CMPX_ID,''',''',KC.CMPX_IDF_ID,''',1000000013,NOW(),1000000013,NOW());')#,'''',KC.CMPX_IDF_ID,'''',',','''','1000000012','''',',','''',)#,`CMPX_IDF_ID`,`REG_USER_ID`,`REG_DTM`,`CHG_USER_ID`,`CHG_DTM`) VALUES ('1','KBA005403',1000000001,'2018-02-04 13:41:54',1000000001,'2018-02-04 13:41:54');
FROM KMIG_KB_CMPX KC
INNER JOIN KMIG_KB_REGN KR3
ON KC.KB_REGN_CD = KR3.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR2
ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR1
ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
INNER JOIN KMIG_KB_NV_REGN_KEY_MAPP KNCKM 
ON KR3.KB_REGN_CD = KNCKM.KB_REGN_CD
AND KNCKM.LV_CD = '3'
INNER JOIN KRED_LEGL_REGN LR
ON LR.LEGL_REGN_CD = KNCKM.LEGL_REGN_CD
INNER JOIN KMIG_NV_CMPX NC
ON LR.LEGL_REGN_CD = NC.GOV_LEGL_DONG_CD
AND NC.NV_CMPX_ID NOT IN (SELECT NV_CMPX_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP)
AND KC.CMPX_IDF_NM LIKE CONCAT('%',SUBSTRING(NC.NV_CMPX_NM,3,2),'%')
AND LENGTH(NC.NV_CMPX_NM) > 6
WHERE 1=1
AND KC.CMPX_IDF_ID NOT IN (SELECT CMPX_IDF_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP)
ORDER BY KC.KB_REGN_CD ASC, CMPX_IDF_ID ASC
;
#작업 5-14 수동 MIG 네이버의 3,4번째 글자가 KB에 포함된 경우
SELECT KC.CMPX_IDF_ID,KC.CMPX_IDF_NM, NC.NV_CMPX_NM,KR3.KB_REGN_NM, KR2.KB_REGN_NM, KR1.KB_REGN_NM, CONCAT('INSERT INTO KMIG_KB_NV_CMPX_KEY_MAPP (NV_CMPX_ID,CMPX_IDF_ID,REG_USER_ID,REG_DTM,CHG_USER_ID,CHG_DTM) VALUES (','''',NC.NV_CMPX_ID,''',''',KC.CMPX_IDF_ID,''',1000000013,NOW(),1000000013,NOW());')#,'''',KC.CMPX_IDF_ID,'''',',','''','1000000012','''',',','''',)#,`CMPX_IDF_ID`,`REG_USER_ID`,`REG_DTM`,`CHG_USER_ID`,`CHG_DTM`) VALUES ('1','KBA005403',1000000001,'2018-02-04 13:41:54',1000000001,'2018-02-04 13:41:54');
FROM KMIG_KB_CMPX KC
INNER JOIN KMIG_KB_REGN KR3
ON KC.KB_REGN_CD = KR3.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR2
ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR1
ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
INNER JOIN KMIG_KB_NV_REGN_KEY_MAPP KNCKM 
ON KR3.KB_REGN_CD = KNCKM.KB_REGN_CD
AND KNCKM.LV_CD = '3'
INNER JOIN KRED_LEGL_REGN LR
ON LR.LEGL_REGN_CD = KNCKM.LEGL_REGN_CD
INNER JOIN KMIG_NV_CMPX NC
ON LR.LEGL_REGN_CD = NC.GOV_LEGL_DONG_CD
AND NC.NV_CMPX_ID NOT IN (SELECT NV_CMPX_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP)
WHERE 1=1
AND KC.CMPX_IDF_ID NOT IN (SELECT CMPX_IDF_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP)
ORDER BY KC.KB_REGN_CD ASC, CMPX_IDF_ID ASC, NV_CMPX_NM ASC
;
#작업 5-16 세대수가 다른 단지 비교
SELECT KR3.KB_REGN_NM, KR2.KB_REGN_NM, KR1.KB_REGN_NM, KC.CMPX_IDF_ID, KC.CMPX_IDF_NM,  KC.TOT_HSHL_CNT, SUBSTRING(NC.TOT_HSHL_CNT,1,LOCATE('세',NC.TOT_HSHL_CNT)-1) 보정세대수, NC.NV_CMPX_NM ,CONCAT('INSERT INTO KMIG_KB_NV_CMPX_KEY_MAPP (NV_CMPX_ID,CMPX_IDF_ID,REG_USER_ID,REG_DTM,CHG_USER_ID,CHG_DTM) VALUES (','''',NC.NV_CMPX_ID,''',''',KC.CMPX_IDF_ID,''',1000000013,NOW(),1000000013,NOW());')#,'''',KC.CMPX_IDF_ID,'''',',','''','1000000012','''',',','''',)#,`CMPX_IDF_ID`,`REG_USER_ID`,`REG_DTM`,`CHG_USER_ID`,`CHG_DTM`) VALUES ('1','KBA005403',1000000001,'2018-02-04 13:41:54',1000000001,'2018-02-04 13:41:54');
FROM KMIG_KB_CMPX KC
INNER JOIN KMIG_KB_REGN KR3
ON KC.KB_REGN_CD = KR3.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR2
ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR1
ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
INNER JOIN KMIG_KB_NV_CMPX_KEY_MAPP KNCKM
ON KC.CMPX_IDF_ID = KNCKM.CMPX_IDF_ID
AND NV_CMPX_ID IN (SELECT NV_CMPX_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP GROUP BY NV_CMPX_ID HAVING COUNT(*) = 1)
INNER JOIN KMIG_NV_CMPX NC
ON NC.NV_CMPX_ID = KNCKM.NV_CMPX_ID
AND SUBSTRING(NC.TOT_HSHL_CNT,1,LOCATE('세',NC.TOT_HSHL_CNT)-1) != KC.TOT_HSHL_CNT
WHERE KC.CMPX_IDF_ID IN (SELECT CMPX_IDF_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP GROUP BY CMPX_IDF_ID HAVING COUNT(*) = 1)
ORDER BY KR3.KB_REGN_CD ASC
;
#18245/18862/17000
SELECT COUNT(*)
FROM KMIG_KB_NV_CMPX_KEY_MAPP
WHERE 1=1
AND NV_CMPX_ID IN (SELECT NV_CMPX_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP GROUP BY NV_CMPX_ID HAVING COUNT(*) = 1)
AND CMPX_IDF_ID IN (SELECT CMPX_IDF_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP GROUP BY CMPX_IDF_ID HAVING COUNT(*) = 1)
;
#MIG 여부 갱신
#SELECT * FROM 
UPDATE 
KMIG_KB_NV_CMPX_KEY_MAPP
SET MIG_CMPL_YN = 'Y'
WHERE 1=1
AND NV_CMPX_ID IN (SELECT A.NV_CMPX_ID FROM (SELECT NV_CMPX_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP GROUP BY NV_CMPX_ID HAVING COUNT(*) = 1) A)
AND CMPX_IDF_ID IN (SELECT A.CMPX_IDF_ID FROM (SELECT CMPX_IDF_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP GROUP BY CMPX_IDF_ID HAVING COUNT(*) = 1) A)
AND CMPX_IDF_ID NOT IN (
	SELECT A.CMPX_IDF_ID 
    FROM (
		SELECT KC.CMPX_IDF_ID
		FROM KMIG_KB_CMPX KC
		INNER JOIN KMIG_KB_REGN KR3
		ON KC.KB_REGN_CD = KR3.KB_REGN_CD
		INNER JOIN KMIG_KB_REGN KR2
		ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
		INNER JOIN KMIG_KB_REGN KR1
		ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
		INNER JOIN KMIG_KB_NV_CMPX_KEY_MAPP KNCKM
		ON KC.CMPX_IDF_ID = KNCKM.CMPX_IDF_ID
		AND NV_CMPX_ID IN (SELECT NV_CMPX_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP GROUP BY NV_CMPX_ID HAVING COUNT(*) = 1)
		INNER JOIN KMIG_NV_CMPX NC
		ON NC.NV_CMPX_ID = KNCKM.NV_CMPX_ID
		AND REPLACE(SUBSTRING(NC.TOT_HSHL_CNT,1,LENGTH(KC.TOT_HSHL_CNT)),'세','') != KC.TOT_HSHL_CNT
		WHERE KC.CMPX_IDF_ID IN (SELECT CMPX_IDF_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP GROUP BY CMPX_IDF_ID HAVING COUNT(*) = 1)
	) A
)    
;
#KB : NV = 1:N의 경우
SELECT KR3.KB_REGN_NM, KR2.KB_REGN_NM, KR1.KB_REGN_NM, KC.CMPX_IDF_ID, KC.CMPX_IDF_NM,  KC.TOT_HSHL_CNT
	,(SELECT SUM(SUBSTRING(TOT_HSHL_CNT,1,LOCATE('세',TOT_HSHL_CNT)-1))
	FROM KMIG_KB_NV_CMPX_KEY_MAPP KNCKM2
	INNER JOIN KMIG_NV_CMPX NC2
	ON KNCKM2.NV_CMPX_ID = NC2.NV_CMPX_ID
	WHERE KNCKM2.CMPX_IDF_ID = KC.CMPX_IDF_ID 
	GROUP BY KNCKM2.CMPX_IDF_ID) 보정세대수
    , NC.TOT_HSHL_CNT, NC.NV_CMPX_NM ,CONCAT('INSERT INTO KMIG_KB_NV_CMPX_KEY_MAPP (NV_CMPX_ID,CMPX_IDF_ID,REG_USER_ID,REG_DTM,CHG_USER_ID,CHG_DTM) VALUES (','''',NC.NV_CMPX_ID,''',''',KC.CMPX_IDF_ID,''',1000000013,NOW(),1000000013,NOW());')#,'''',KC.CMPX_IDF_ID,'''',',','''','1000000012','''',',','''',)#,`CMPX_IDF_ID`,`REG_USER_ID`,`REG_DTM`,`CHG_USER_ID`,`CHG_DTM`) VALUES ('1','KBA005403',1000000001,'2018-02-04 13:41:54',1000000001,'2018-02-04 13:41:54');
FROM KMIG_KB_CMPX KC
INNER JOIN KMIG_KB_REGN KR3
ON KC.KB_REGN_CD = KR3.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR2
ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR1
ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
INNER JOIN KMIG_KB_NV_CMPX_KEY_MAPP KNCKM
ON KC.CMPX_IDF_ID = KNCKM.CMPX_IDF_ID
AND NV_CMPX_ID IN (SELECT NV_CMPX_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP GROUP BY NV_CMPX_ID HAVING COUNT(*) = 1)
INNER JOIN KMIG_NV_CMPX NC
ON NC.NV_CMPX_ID = KNCKM.NV_CMPX_ID
WHERE KC.CMPX_IDF_ID IN (SELECT CMPX_IDF_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP GROUP BY CMPX_IDF_ID HAVING COUNT(*) > 1)
AND (SELECT SUM(SUBSTRING(TOT_HSHL_CNT,1,LOCATE('세',TOT_HSHL_CNT)-1))
	FROM KMIG_KB_NV_CMPX_KEY_MAPP KNCKM2
	INNER JOIN KMIG_NV_CMPX NC2
	ON KNCKM2.NV_CMPX_ID = NC2.NV_CMPX_ID
	WHERE KNCKM2.CMPX_IDF_ID = KC.CMPX_IDF_ID 
	GROUP BY KNCKM2.CMPX_IDF_ID) != KC.TOT_HSHL_CNT
ORDER BY KR3.KB_REGN_CD ASC
;
#261/177
SELECT COUNT(*)
FROM KMIG_KB_NV_CMPX_KEY_MAPP
WHERE 1=1
AND NV_CMPX_ID IN (SELECT NV_CMPX_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP GROUP BY NV_CMPX_ID HAVING COUNT(*) = 1)
AND CMPX_IDF_ID IN (SELECT CMPX_IDF_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP GROUP BY CMPX_IDF_ID HAVING COUNT(*) > 1)
;
UPDATE 
KMIG_KB_NV_CMPX_KEY_MAPP
SET MIG_CMPL_YN = 'Y'
WHERE 1=1
AND NV_CMPX_ID IN (SELECT A.NV_CMPX_ID FROM (SELECT NV_CMPX_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP GROUP BY NV_CMPX_ID HAVING COUNT(*) = 1) A)
AND CMPX_IDF_ID IN (SELECT A.CMPX_IDF_ID FROM (SELECT CMPX_IDF_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP GROUP BY CMPX_IDF_ID HAVING COUNT(*) > 1) A)
AND CMPX_IDF_ID NOT IN (
	SELECT A.CMPX_IDF_ID 
    FROM (
SELECT KC.CMPX_IDF_ID
	,(SELECT SUM(SUBSTRING(TOT_HSHL_CNT,1,LOCATE('세',TOT_HSHL_CNT)-1))
	FROM KMIG_KB_NV_CMPX_KEY_MAPP KNCKM2
	INNER JOIN KMIG_NV_CMPX NC2
	ON KNCKM2.NV_CMPX_ID = NC2.NV_CMPX_ID
	WHERE KNCKM2.CMPX_IDF_ID = KC.CMPX_IDF_ID 
	GROUP BY KNCKM2.CMPX_IDF_ID) 보정세대수
    , NC.TOT_HSHL_CNT, NC.NV_CMPX_NM ,CONCAT('INSERT INTO KMIG_KB_NV_CMPX_KEY_MAPP (NV_CMPX_ID,CMPX_IDF_ID,REG_USER_ID,REG_DTM,CHG_USER_ID,CHG_DTM) VALUES (','''',NC.NV_CMPX_ID,''',''',KC.CMPX_IDF_ID,''',1000000013,NOW(),1000000013,NOW());')#,'''',KC.CMPX_IDF_ID,'''',',','''','1000000012','''',',','''',)#,`CMPX_IDF_ID`,`REG_USER_ID`,`REG_DTM`,`CHG_USER_ID`,`CHG_DTM`) VALUES ('1','KBA005403',1000000001,'2018-02-04 13:41:54',1000000001,'2018-02-04 13:41:54');
FROM KMIG_KB_CMPX KC
INNER JOIN KMIG_KB_REGN KR3
ON KC.KB_REGN_CD = KR3.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR2
ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR1
ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
INNER JOIN KMIG_KB_NV_CMPX_KEY_MAPP KNCKM
ON KC.CMPX_IDF_ID = KNCKM.CMPX_IDF_ID
AND NV_CMPX_ID IN (SELECT NV_CMPX_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP GROUP BY NV_CMPX_ID HAVING COUNT(*) = 1)
INNER JOIN KMIG_NV_CMPX NC
ON NC.NV_CMPX_ID = KNCKM.NV_CMPX_ID
WHERE KC.CMPX_IDF_ID IN (SELECT CMPX_IDF_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP GROUP BY CMPX_IDF_ID HAVING COUNT(*) > 1)
AND (SELECT SUM(SUBSTRING(TOT_HSHL_CNT,1,LOCATE('세',TOT_HSHL_CNT)-1))
	FROM KMIG_KB_NV_CMPX_KEY_MAPP KNCKM2
	INNER JOIN KMIG_NV_CMPX NC2
	ON KNCKM2.NV_CMPX_ID = NC2.NV_CMPX_ID
	WHERE KNCKM2.CMPX_IDF_ID = KC.CMPX_IDF_ID 
	GROUP BY KNCKM2.CMPX_IDF_ID) != KC.TOT_HSHL_CNT
	) A
)    
;

#KB : NV = N:1의 경우
SELECT KR3.KB_REGN_NM, KR2.KB_REGN_NM, KR1.KB_REGN_NM, KC.CMPX_IDF_ID, KC.CMPX_IDF_NM,  KC.TOT_HSHL_CNT
    ,(SELECT SUM(KC2.TOT_HSHL_CNT)
	FROM KMIG_KB_NV_CMPX_KEY_MAPP KNCKM2
	INNER JOIN KMIG_KB_CMPX KC2
	ON KNCKM2.CMPX_IDF_ID = KC2.CMPX_IDF_ID
	WHERE KNCKM2.NV_CMPX_ID = NC.NV_CMPX_ID
	GROUP BY KNCKM2.NV_CMPX_ID) KB세대수합 
    ,SUBSTRING(NC.TOT_HSHL_CNT,1,LOCATE('세',NC.TOT_HSHL_CNT)-1) NV보정세대수
    , NC.TOT_HSHL_CNT    , NC.NV_CMPX_NM ,CONCAT('INSERT INTO KMIG_KB_NV_CMPX_KEY_MAPP (NV_CMPX_ID,CMPX_IDF_ID,REG_USER_ID,REG_DTM,CHG_USER_ID,CHG_DTM) VALUES (','''',NC.NV_CMPX_ID,''',''',KC.CMPX_IDF_ID,''',1000000013,NOW(),1000000013,NOW());')#,'''',KC.CMPX_IDF_ID,'''',',','''','1000000012','''',',','''',)#,`CMPX_IDF_ID`,`REG_USER_ID`,`REG_DTM`,`CHG_USER_ID`,`CHG_DTM`) VALUES ('1','KBA005403',1000000001,'2018-02-04 13:41:54',1000000001,'2018-02-04 13:41:54');
FROM KMIG_KB_CMPX KC
INNER JOIN KMIG_KB_REGN KR3
ON KC.KB_REGN_CD = KR3.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR2
ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR1
ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
INNER JOIN KMIG_KB_NV_CMPX_KEY_MAPP KNCKM
ON KC.CMPX_IDF_ID = KNCKM.CMPX_IDF_ID
AND NV_CMPX_ID IN (SELECT NV_CMPX_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP GROUP BY NV_CMPX_ID HAVING COUNT(*) > 1)
INNER JOIN KMIG_NV_CMPX NC
ON NC.NV_CMPX_ID = KNCKM.NV_CMPX_ID
WHERE KC.CMPX_IDF_ID IN (SELECT CMPX_IDF_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP GROUP BY CMPX_IDF_ID HAVING COUNT(*) = 1)
AND (SELECT SUM(KC2.TOT_HSHL_CNT)
	FROM KMIG_KB_NV_CMPX_KEY_MAPP KNCKM2
	INNER JOIN KMIG_KB_CMPX KC2
	ON KNCKM2.CMPX_IDF_ID = KC2.CMPX_IDF_ID
	WHERE KNCKM2.NV_CMPX_ID = NC.NV_CMPX_ID
	GROUP BY KNCKM2.NV_CMPX_ID) != SUBSTRING(NC.TOT_HSHL_CNT,1,LOCATE('세',NC.TOT_HSHL_CNT)-1)
ORDER BY KR3.KB_REGN_CD, NC.NV_CMPX_ID ASC
;
#261/84
SELECT COUNT(*)
FROM KMIG_KB_NV_CMPX_KEY_MAPP
WHERE 1=1
AND NV_CMPX_ID IN (SELECT NV_CMPX_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP GROUP BY NV_CMPX_ID HAVING COUNT(*) > 1)
AND CMPX_IDF_ID IN (SELECT CMPX_IDF_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP GROUP BY CMPX_IDF_ID HAVING COUNT(*) = 1)
;
UPDATE 
KMIG_KB_NV_CMPX_KEY_MAPP
SET MIG_CMPL_YN = 'Y'
WHERE 1=1
AND NV_CMPX_ID IN (SELECT A.NV_CMPX_ID FROM (SELECT NV_CMPX_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP GROUP BY NV_CMPX_ID HAVING COUNT(*) = 1) A)
AND CMPX_IDF_ID IN (SELECT A.CMPX_IDF_ID FROM (SELECT CMPX_IDF_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP GROUP BY CMPX_IDF_ID HAVING COUNT(*) > 1) A)
AND CMPX_IDF_ID NOT IN (
	SELECT A.CMPX_IDF_ID 
    FROM (
SELECT KC.CMPX_IDF_ID
    ,(SELECT SUM(KC2.TOT_HSHL_CNT)
	FROM KMIG_KB_NV_CMPX_KEY_MAPP KNCKM2
	INNER JOIN KMIG_KB_CMPX KC2
	ON KNCKM2.CMPX_IDF_ID = KC2.CMPX_IDF_ID
	WHERE KNCKM2.NV_CMPX_ID = NC.NV_CMPX_ID
	GROUP BY KNCKM2.NV_CMPX_ID) KB세대수합 
    ,SUBSTRING(NC.TOT_HSHL_CNT,1,LOCATE('세',NC.TOT_HSHL_CNT)-1) NV보정세대수
    , NC.TOT_HSHL_CNT    , NC.NV_CMPX_NM ,CONCAT('INSERT INTO KMIG_KB_NV_CMPX_KEY_MAPP (NV_CMPX_ID,CMPX_IDF_ID,REG_USER_ID,REG_DTM,CHG_USER_ID,CHG_DTM) VALUES (','''',NC.NV_CMPX_ID,''',''',KC.CMPX_IDF_ID,''',1000000013,NOW(),1000000013,NOW());')#,'''',KC.CMPX_IDF_ID,'''',',','''','1000000012','''',',','''',)#,`CMPX_IDF_ID`,`REG_USER_ID`,`REG_DTM`,`CHG_USER_ID`,`CHG_DTM`) VALUES ('1','KBA005403',1000000001,'2018-02-04 13:41:54',1000000001,'2018-02-04 13:41:54');
FROM KMIG_KB_CMPX KC
INNER JOIN KMIG_KB_REGN KR3
ON KC.KB_REGN_CD = KR3.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR2
ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR1
ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
INNER JOIN KMIG_KB_NV_CMPX_KEY_MAPP KNCKM
ON KC.CMPX_IDF_ID = KNCKM.CMPX_IDF_ID
AND NV_CMPX_ID IN (SELECT NV_CMPX_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP GROUP BY NV_CMPX_ID HAVING COUNT(*) > 1)
INNER JOIN KMIG_NV_CMPX NC
ON NC.NV_CMPX_ID = KNCKM.NV_CMPX_ID
WHERE KC.CMPX_IDF_ID IN (SELECT CMPX_IDF_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP GROUP BY CMPX_IDF_ID HAVING COUNT(*) = 1)
AND (SELECT SUM(KC2.TOT_HSHL_CNT)
	FROM KMIG_KB_NV_CMPX_KEY_MAPP KNCKM2
	INNER JOIN KMIG_KB_CMPX KC2
	ON KNCKM2.CMPX_IDF_ID = KC2.CMPX_IDF_ID
	WHERE KNCKM2.NV_CMPX_ID = NC.NV_CMPX_ID
	GROUP BY KNCKM2.NV_CMPX_ID) != SUBSTRING(NC.TOT_HSHL_CNT,1,LOCATE('세',NC.TOT_HSHL_CNT)-1)
	) A
)    
;
#정합성 검증
SELECT *
FROM KMIG_KB_NV_CMPX_KEY_MAPP
WHERE CMPX_IDF_ID IN (
	SELECT CMPX_IDF_ID 
	FROM KMIG_KB_NV_CMPX_KEY_MAPP
	WHERE MIG_CMPL_YN = 'N'
)
AND MIG_CMPL_YN = 'Y'
;
SELECT *
FROM KMIG_KB_NV_CMPX_KEY_MAPP
WHERE NV_CMPX_ID IN (
	SELECT NV_CMPX_ID 
	FROM KMIG_KB_NV_CMPX_KEY_MAPP
	WHERE MIG_CMPL_YN = 'N'
)
AND MIG_CMPL_YN = 'Y'
;
UPDATE KMIG_KB_NV_CMPX_KEY_MAPP
SET MIG_CMPL_YN = 'N'
WHERE CMPX_IDF_ID = 'KBA011805'
;
#MIG 정보 추출
SELECT KR3.KB_REGN_NM, KR2.KB_REGN_NM, KR1.KB_REGN_NM, KC.CMPX_IDF_ID, KC.CMPX_IDF_NM,  KC.TOT_HSHL_CNT
	, SUBSTRING(NC.TOT_HSHL_CNT,1,LOCATE('세',NC.TOT_HSHL_CNT)-1) NV세대수
    , (SELECT SUM(SUBSTRING(NCT.SOH_HSHL_CNT,1,LOCATE('세',NCT.SOH_HSHL_CNT)-1)) FROM KMIG_NV_CMPX_TYP NCT WHERE NCT.NV_CMPX_ID = NC.NV_CMPX_ID GROUP BY NV_CMPX_ID) SUM_HSHL_CNT    
    , NC.NV_CMPX_NM, NC.NV_CMPX_ID
    , (SELECT group_concat(KCT.HOUSE_TYP_NM,'^') from KMIG_KB_CMPX_TYP KCT WHERE KCT.CMPX_IDF_ID = KC.CMPX_IDF_ID group by CMPX_IDF_ID) KB주택형
    , (SELECT GROUP_CONCAT(NCT.CMPX_TYP_NM,'^') from KMIG_NV_CMPX_TYP NCT WHERE NCT.NV_CMPX_ID = NC.NV_CMPX_ID group by NCT.NV_CMPX_ID) NV주택형
    , CONCAT("http://land.naver.com/article/complexInfo.nhn?rletNo=",NC.NV_CMPX_ID) NV_URL
	, CONCAT("http://nland.kbstar.com/quics?page=B046949&물건종별구분=01&물건식별자=",KC.CMPX_IDF_ID,'&주택형일련번호=&부동산대지역코드=',KR1.KB_REGN_CD,"&부동산중지역코드=",KR2.KB_REGN_CD,"&부동산소지역코드=",KR3.KB_REGN_CD,"&부동산대지역명=&부동산중지역명=&부동산소지역명=&아파트명=",KC.CMPX_IDF_NM,"&지역목록단계=4&지역명=&조회구분=&GIS호출여부=&매물종별그룹구분=&매물거래구분=&nextPageYn=Y&쿠키사용여부=0&탭구분=") AS KB_URL
    , KNCKM.REG_USER_ID
FROM KMIG_KB_CMPX KC
INNER JOIN KMIG_KB_REGN KR3
ON KC.KB_REGN_CD = KR3.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR2
ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR1
ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
INNER JOIN KMIG_KB_NV_CMPX_KEY_MAPP KNCKM
ON KC.CMPX_IDF_ID = KNCKM.CMPX_IDF_ID
AND MIG_CMPL_YN = 'N'
INNER JOIN KMIG_NV_CMPX NC
ON NC.NV_CMPX_ID = KNCKM.NV_CMPX_ID
ORDER BY KR3.KB_REGN_CD, NC.NV_CMPX_ID ASC
;
SELECT SUM(SUBSTRING(NCT.SOH_HSHL_CNT,1,LOCATE('세',NCT.SOH_HSHL_CNT)-1))
FROM KMIG_NV_CMPX_TYP NCT
WHERE NCT.NV_CMPX_ID = NC.NV_CMPX_ID
GROUP BY NV_CMPX_ID
;
SELECT CMPX_IDF_ID, group_concat(HOUSE_TYP_RPSN_NM,'&') as 주택형 
from KMIG_KB_CMPX_TYP 
group by CMPX_IDF_ID
;
#5-20 미매핑 KB단지 MIG
#MIG 정보 추출
SELECT KR3.KB_REGN_NM, KR2.KB_REGN_NM, KR1.KB_REGN_NM, KC.CMPX_IDF_ID, KC.CMPX_IDF_NM,  KC.TOT_HSHL_CNT
	, SUBSTRING(NC.TOT_HSHL_CNT,1,LOCATE('세',NC.TOT_HSHL_CNT)-1) NV세대수
    , (SELECT SUM(SUBSTRING(NCT.SOH_HSHL_CNT,1,LOCATE('세',NCT.SOH_HSHL_CNT)-1)) FROM KMIG_NV_CMPX_TYP NCT WHERE NCT.NV_CMPX_ID = NC.NV_CMPX_ID GROUP BY NV_CMPX_ID) SUM_HSHL_CNT    
    , NC.NV_CMPX_NM, NC.NV_CMPX_ID
    , (SELECT group_concat(KCT.HOUSE_TYP_NM,'^') from KMIG_KB_CMPX_TYP KCT WHERE KCT.CMPX_IDF_ID = KC.CMPX_IDF_ID group by CMPX_IDF_ID) KB주택형
    , (SELECT GROUP_CONCAT(NCT.CMPX_TYP_NM,'^') from KMIG_NV_CMPX_TYP NCT WHERE NCT.NV_CMPX_ID = NC.NV_CMPX_ID group by NCT.NV_CMPX_ID) NV주택형
    , CONCAT("http://land.naver.com/article/complexInfo.nhn?rletNo=",NC.NV_CMPX_ID) NV_URL
	, CONCAT("http://nland.kbstar.com/quics?page=B046949&물건종별구분=01&물건식별자=",KC.CMPX_IDF_ID,'&주택형일련번호=&부동산대지역코드=',KR1.KB_REGN_CD,"&부동산중지역코드=",KR2.KB_REGN_CD,"&부동산소지역코드=",KR3.KB_REGN_CD,"&부동산대지역명=&부동산중지역명=&부동산소지역명=&아파트명=",KC.CMPX_IDF_NM,"&지역목록단계=4&지역명=&조회구분=&GIS호출여부=&매물종별그룹구분=&매물거래구분=&nextPageYn=Y&쿠키사용여부=0&탭구분=") AS KB_URL
    , (SELECT COUNT(*) FROM KMIG_KB_NV_CMPX_KEY_MAPP B WHERE B.NV_CMPX_ID = NC.NV_CMPX_ID) 기매핑건수
    , KC.KB_REGN_CD
FROM KMIG_KB_CMPX KC
INNER JOIN KMIG_KB_REGN KR3
ON KC.KB_REGN_CD = KR3.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR2
ON KR3.UP_KB_REGN_CD = KR2.KB_REGN_CD
INNER JOIN KMIG_KB_REGN KR1
ON KR2.UP_KB_REGN_CD = KR1.KB_REGN_CD
INNER JOIN KMIG_KB_NV_REGN_KEY_MAPP KNRKM
ON KC.KB_REGN_CD = KNRKM.KB_REGN_CD
LEFT OUTER JOIN KMIG_NV_CMPX NC #보통의 경우에는 INNER JOIN
ON NC.GOV_LEGL_DONG_CD = KNRKM.LEGL_REGN_CD
WHERE KC.CMPX_IDF_ID NOT IN (SELECT CMPX_IDF_ID FROM KMIG_KB_NV_CMPX_KEY_MAPP)
AND (KC.MIG_RSN NOT IN ('REBUILD','KBDBDUP','DEL','NVUNREG','KBDBDEL','NEW') OR KC.MIG_RSN IS NULL)
ORDER BY KR3.KB_REGN_CD, KC.CMPX_IDF_ID ASC
;
SELECT * FROM KMIG_KB_REGN
WHERE KB_REGN_CD IN ('020903','020913')
;
SELECT * FROM KMIG_KB_NV_REGN_KEY_MAPP
WHERE KB_REGN_CD IN ('020903','020913')
;
SELECT * FROM KMIG_GOV_LEGL_DONG
WHERE GOV_LEGL_DONG_CD IN (
'4136011000','4136010900')
;
SELECT * FROM KMIG_GOV_LEGL_DONG
WHERE GOV_LEGL_DONG_NM LIKE '%다산동%'
;
UPDATE kmig_kb_cmpx
SET MIG_RSN = 'DEL'
  , CHG_USER_ID = 1000000001
  , CHG_DTM = NOW()
WHERE CMPX_IDF_ID = 'KBA009155'
;
SELECT * FROM KADM_COM_CD_DTL